#!/bin/bash

if [ ! -d "/tmp" ]; then
    echo directory /tmp not exists
    exit 1
fi

if [ ! -d "/var/log/sphinxsearch" ]; then
    echo directory /var/log/sphinxsearch not exists
    exit 1
fi

if [ ! -f "/var/log/sphinxsearch/query.log.1.gz" ]; then
    echo file /var/log/sphinxsearch/query.log.1.gz not exists
    exit 1
fi

if [ ! -f "/var/log/sphinxsearch/query.log" ]; then
    echo file /var/log/sphinxsearch/query.log not exists
    exit 1
fi

if [ ! -f "/usr/local/sphinx/stopwords.txt" ]; then
    echo file /usr/local/sphinx/stopwords.txt not exists
    exit 1
fi

# Create temporary directory for this process
tmp_dir=$(mktemp -d -p /tmp sphinx-stopwords-XXXXXXXXXX)

# trap not correct exit and delete temporary directory
trap "rm -rf $tmp_dir; exit 1" 1 2 3 15

zcat /var/log/sphinxsearch/query.log.* >$tmp_dir/query.log && cat /var/log/sphinxsearch/query.log >>$tmp_dir/query.log
awk '$6>1{print}' $tmp_dir/query.log >$tmp_dir/query_long.log
awk '{print $13}' $tmp_dir/query_long.log | sort | uniq -c | sort -rn >$tmp_dir/query_long_users.log

for index_name in $(cat $tmp_dir/query_long_users.log | sed -r 's/.*\[(.*)\].*/\1/'); do
    grep "\[$index_name\]" $tmp_dir/query_long.log | sed -r "s/.*\[$index_name\] //g" | sed -r 's/\W/ /g' | sed -r 's/[0-9]//g' | sed -r 's/\s+/ /g' | awk 'BEGIN {FS = " "}{for (x = 1; x <= NF; x++) { printf "%s%s",$x, "\n"}}' | sed -r 's/^[a-zA-Z]$//g' | sed '/^$/d' | sort | uniq -c | sort -rn | head -n 20 | awk '{print $2}' >>$tmp_dir/stopwords.txt
done

echo "$(cat $tmp_dir/stopwords.txt | sort | uniq | wc -w) stopwords found..."
echo "$(wc -w /usr/local/sphinx/stopwords.txt) stopwords in old file..."

for w in $(cat /usr/local/sphinx/stopwords.txt); do
    echo $w >>$tmp_dir/stopwords.txt
done

cat $tmp_dir/stopwords.txt | sort | uniq | tr -s '\n' ' ' >$tmp_dir/new_stopwords.txt
mv $tmp_dir/new_stopwords.txt /usr/local/sphinx/stopwords.txt
echo "$(wc -w /usr/local/sphinx/stopwords.txt) stopwords in new merged file..."
rm -rf $tmp_dir

indexer -c /etc/sphinxsearch/sphinx.conf --rotate --all
